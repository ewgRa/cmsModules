<?php
	/**
	 * Generated by meta builder!
	 * Do not edit this class!
	 * @license http://www.opensource.org/licenses/bsd-license.php BSD
	 * @author Evgeniy Sokolov <ewgraf@gmail.com>
	 */
	abstract class AutoPageRight
	{
		private $id = null;
		
		private $pageId = null;
		
		/**
		 * @var Page
		 */
		private $page = null;
		
		private $rightId = null;
		
		/**
		 * @var Right
		 */
		private $right = null;
		
		private $redirectPageId = null;
		
		/**
		 * @var Page
		 */
		private $redirectPage = null;
		
		/**
		 * @return PageRightDA
		 */
		public static function da()
		{
			return PageRightDA::me();
		}
		
		/**
		 * @return AutoPageRight
		 */
		public function setId($id)
		{
			$this->id = $id;

			return $this;
		}
		
		public function getId()
		{
			Assert::isNotNull($this->id);
			return $this->id;
		}
		
		/**
		 * @return AutoPageRight
		 */
		public function setPageId($pageId)
		{
			$this->page = null;
			$this->pageId = $pageId;

			return $this;
		}
		
		public function getPageId()
		{
			return $this->pageId;
		}
		
		/**
		 * @return AutoPageRight
		 */
		public function setPage(Page $page)
		{
			$this->pageId = $page->getId();
			$this->page = $page;

			return $this;
		}
		
		/**
		 * @return Page
		 */
		public function getPage()
		{
			if (!$this->page && $this->getPageId())
				$this->page = Page::da()->getById($this->getPageId());
				
			return $this->page;
		}
		
		/**
		 * @return AutoPageRight
		 */
		public function setRightId($rightId)
		{
			$this->right = null;
			$this->rightId = $rightId;

			return $this;
		}
		
		public function getRightId()
		{
			return $this->rightId;
		}
		
		/**
		 * @return AutoPageRight
		 */
		public function setRight(Right $right)
		{
			$this->rightId = $right->getId();
			$this->right = $right;

			return $this;
		}
		
		/**
		 * @return Right
		 */
		public function getRight()
		{
			if (!$this->right && $this->getRightId())
				$this->right = Right::da()->getById($this->getRightId());
				
			return $this->right;
		}
		
		/**
		 * @return AutoPageRight
		 */
		public function setRedirectPageId($redirectPageId)
		{
			$this->redirectPage = null;
			$this->redirectPageId = $redirectPageId;

			return $this;
		}
		
		public function getRedirectPageId()
		{
			return $this->redirectPageId;
		}
		
		/**
		 * @return AutoPageRight
		 */
		public function setRedirectPage(Page $redirectPage)
		{
			$this->redirectPageId = $redirectPage->getId();
			$this->redirectPage = $redirectPage;

			return $this;
		}
		
		/**
		 * @return Page
		 */
		public function getRedirectPage()
		{
			if (!$this->redirectPage && $this->getRedirectPageId())
				$this->redirectPage = Page::da()->getById($this->getRedirectPageId());
				
			return $this->redirectPage;
		}
	}
?>