<?php
	/**
	 * Generated by meta builder!
	 * Do not edit this class!
	 * @license http://www.opensource.org/licenses/bsd-license.php BSD
	 * @author Evgeniy Sokolov <ewgraf@gmail.com>
	 */
	abstract class AutoNavigation
	{
		private $id = null;
		
		private $categoryId = null;
		
		/**
		 * @var NavigationCategory
		 */
		private $category = null;
		
		/**
		 * @var HttpUrl
		 */
		private $uri = null;
		
		/**
		 * @return NavigationDA
		 */
		public static function da()
		{
			return NavigationDA::me();
		}
		
		/**
		 * @return AutoNavigation
		 */
		public function setId($id)
		{
			$this->id = $id;

			return $this;
		}
		
		public function getId()
		{
			Assert::isNotNull($this->id);
			return $this->id;
		}
		
		/**
		 * @return AutoNavigation
		 */
		public function setCategoryId($categoryId)
		{
			$this->category = null;
			$this->categoryId = $categoryId;

			return $this;
		}
		
		public function getCategoryId()
		{
			return $this->categoryId;
		}
		
		/**
		 * @return AutoNavigation
		 */
		public function setCategory(NavigationCategory $category)
		{
			$this->categoryId = $category->getId();
			$this->category = $category;

			return $this;
		}
		
		/**
		 * @return NavigationCategory
		 */
		public function getCategory()
		{
			if (!$this->category && $this->getCategoryId())
				$this->category = NavigationCategory::da()->getById($this->getCategoryId());
				
			return $this->category;
		}
		
		/**
		 * @return AutoNavigation
		 */
		public function setUri(HttpUrl $uri)
		{
			$this->uri = $uri;

			return $this;
		}
		
		/**
		 * @return HttpUrl
		 */
		public function getUri()
		{
			return $this->uri;
		}
	}
?>